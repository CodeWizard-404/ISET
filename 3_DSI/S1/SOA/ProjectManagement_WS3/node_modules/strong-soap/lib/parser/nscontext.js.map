{"version":3,"file":"nscontext.js","names":["NamespaceScope","constructor","parent","namespaces","prefixCount","getNamespaceURI","prefix","localOnly","nsURI","uri","getNamespaceMapping","declared","mapping","getPrefix","p","getPrefixMapping","generatePrefix","base","NamespaceContext","scopes","pushContext","addNamespace","currentScope","scope","push","popContext","pop","registerNamespace","declareNamespace","module","exports"],"sources":["../../src/parser/nscontext.js"],"sourcesContent":["// Copyright IBM Corp. 2016. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\n/**\n * Scope for XML namespaces\n * @param {NamespaceScope} [parent] Parent scope\n * @returns {NamespaceScope}\n * @constructor\n */\nclass NamespaceScope {\n  constructor(parent) {\n    this.parent = parent;\n    this.namespaces = {};\n    this.prefixCount = 0;\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsURI = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsURI != null) {\n          return nsURI.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsURI, localOnly) {\n    switch (nsURI) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsURI) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsURI);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefixMapping(nsURI, localOnly) {\n    switch (nsURI) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsURI && this.namespaces[p].declared===true) {\n            return this.namespaces[p];\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefixMapping(nsURI);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Generate a new prefix that is not mapped to any uris\n   * @param base {string} The base for prefix\n   * @returns {string}\n   */\n  generatePrefix(base) {\n    base = base || 'ns';\n    while (true) {\n      let prefix = 'ns' + (++this.prefixCount);\n      if (!this.getNamespaceURI(prefix)) {\n        // The prefix is not used\n        return prefix;\n      }\n    }\n  }\n}\n\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nclass NamespaceContext {\n  constructor() {\n    this.scopes = [];\n    this.pushContext();\n  }\n\n  /**\n   * Add a prefix/URI namespace mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {boolean} true if the mapping is added or false if the mapping\n   * already exists\n   */\n  addNamespace(prefix, nsURI, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsURI) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsURI,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Push a scope into the context\n   * @returns {NamespaceScope} The current scope\n   */\n  pushContext() {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  /**\n   * Pop a scope out of the context\n   * @returns {NamespaceScope} The removed scope\n   */\n  popContext() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    return this.currentScope &&\n      this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsURI, localOnly) {\n    return this.currentScope &&\n      this.currentScope.getPrefix(nsURI, localOnly);\n  }\n\n  /**\n   * Look up the namespace mapping by nsURI\n   * @param {String} nsURI Namespace URI\n   * @returns {String} Namespace mapping\n   */\n  getPrefixMapping(nsURI) {\n    return this.currentScope &&\n      this.currentScope.getPrefixMapping(nsURI);\n  }\n\n  /**\n   * Generate a new prefix that is not mapped to any uris\n   * @param base {string} The base for prefix\n   * @returns {string}\n   */\n  generatePrefix(base) {\n    return this.currentScope &&\n      this.currentScope.generatePrefix(base);\n  }\n\n  /**\n   * Register a namespace\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @returns {Object} The matching or generated namespace mapping\n   */\n  registerNamespace(prefix, nsURI) {\n    var mapping;\n    if (!prefix) {\n      prefix = this.generatePrefix();\n    } else {\n      mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsURI) {\n        // Found an existing mapping\n        return mapping;\n      }\n    }\n    if (this.getNamespaceURI(prefix)) {\n      // The prefix is already mapped to a different namespace\n      prefix = this.generatePrefix();\n    }\n    if (this.currentScope) {\n      mapping = {\n        uri: nsURI,\n        prefix: prefix,\n        declared: false\n      };\n      this.currentScope.namespaces[prefix] = mapping;\n      return mapping;\n    }\n    return null;\n  }\n\n  /**\n   * Declare a namespace prefix/uri mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @returns {Boolean} true if the declaration is created\n   */\n  declareNamespace(prefix, nsURI) {\n    var mapping = this.registerNamespace(prefix, nsURI);\n    if (!mapping) return null;\n    if (mapping.declared) {\n      return null;\n    }\n    mapping = this.currentScope.namespaces[mapping.prefix];\n    if (mapping) {\n      mapping.declared = true;\n    } else {\n      mapping = {\n        prefix: mapping.prefix,\n        uri: nsURI,\n        declared: true\n      };\n      this.currentScope.namespaces[mapping.prefix] = mapping;\n    }\n    return mapping;\n  };\n}\n\nmodule.exports = NamespaceContext;\n\n\n\n"],"mappings":"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","ignoreList":[]}