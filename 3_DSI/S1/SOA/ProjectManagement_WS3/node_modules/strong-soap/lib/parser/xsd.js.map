{"version":3,"file":"xsd.js","names":["helper","require","builtinTypes","getBuiltinTypes","SimpleType","t","schemaTypes","type","name","namespaces","xsd","targetNamespace","jsType","exports","getBuiltinType","parse","value"],"sources":["../../src/parser/xsd.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar helper = require('./helper');\nvar builtinTypes;\n\nfunction getBuiltinTypes() {\n  if (builtinTypes) return builtinTypes;\n  builtinTypes = {};\n  var SimpleType = require('./xsd/simpleType');\n  for (let t in helper.schemaTypes) {\n    let type = new SimpleType('xsd:simpleType',\n      {name: t, 'xmlns:xsd': helper.namespaces.xsd}, {});\n    type.targetNamespace = helper.namespaces.xsd;\n    type.jsType = helper.schemaTypes[t];\n    builtinTypes[t] = type;\n  }\n  return builtinTypes;\n}\n\nexports.getBuiltinTypes = getBuiltinTypes;\n\nexports.getBuiltinType = function(name) {\n  return getBuiltinTypes()[name];\n};\n\n\nfunction parse(value, type) {\n  var SimpleType = require('./xsd/simpleType');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,YAAY;AAEhB,SAASC,eAAeA,CAAA,EAAG;EACzB,IAAID,YAAY,EAAE,OAAOA,YAAY;EACrCA,YAAY,GAAG,CAAC,CAAC;EACjB,IAAIE,UAAU,GAAGH,OAAO,CAAC,kBAAkB,CAAC;EAC5C,KAAK,IAAII,CAAC,IAAIL,MAAM,CAACM,WAAW,EAAE;IAChC,IAAIC,IAAI,GAAG,IAAIH,UAAU,CAAC,gBAAgB,EACxC;MAACI,IAAI,EAAEH,CAAC;MAAE,WAAW,EAAEL,MAAM,CAACS,UAAU,CAACC;IAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACpDH,IAAI,CAACI,eAAe,GAAGX,MAAM,CAACS,UAAU,CAACC,GAAG;IAC5CH,IAAI,CAACK,MAAM,GAAGZ,MAAM,CAACM,WAAW,CAACD,CAAC,CAAC;IACnCH,YAAY,CAACG,CAAC,CAAC,GAAGE,IAAI;EACxB;EACA,OAAOL,YAAY;AACrB;AAEAW,OAAO,CAACV,eAAe,GAAGA,eAAe;AAEzCU,OAAO,CAACC,cAAc,GAAG,UAASN,IAAI,EAAE;EACtC,OAAOL,eAAe,CAAC,CAAC,CAACK,IAAI,CAAC;AAChC,CAAC;AAGD,SAASO,KAAKA,CAACC,KAAK,EAAET,IAAI,EAAE;EAC1B,IAAIH,UAAU,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC9C","ignoreList":[]}