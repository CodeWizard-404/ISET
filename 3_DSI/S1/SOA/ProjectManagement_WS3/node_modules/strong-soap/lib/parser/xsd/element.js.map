{"version":3,"file":"element.js","names":["XSDElement","require","QName","helper","Schema","ComplexType","SimpleType","Element","constructor","nsName","attrs","options","addChild","child","name","describe","definitions","descriptor","form","getForm","qname","getQName","isMany","type","typeQName","ElementDescriptor","$nillable","isNillable","ref","refDescriptor","clone","isSimple","typeDescriptor","elements","attributes","mixed","extension","jsType","children","i","childDescriptor","$name","anonymous","postProcess","defintions","schemas","$ref","resolveSchemaObject","$type","substitutionGroup","$substitutionGroup","parent","$form","$elementFormDefault","elementName","allowedChildren","module","exports"],"sources":["../../../src/parser/xsd/element.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar QName = require('../qname');\nvar helper = require('../helper');\nvar Schema = require('./schema');\nvar ComplexType = require('./complexType');\nvar SimpleType = require('./simpleType');\n\nclass Element extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  addChild(child) {\n    this[child.name] = child;\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var form = this.getForm();\n    var qname = this.getQName();\n    var isMany = this.isMany();\n\n    var type = this.type;\n    var typeQName;\n    if (type instanceof QName) {\n      typeQName = type;\n    } else if (type instanceof XSDElement) {\n      typeQName = type.getQName();\n    }\n    var descriptor = this.descriptor =\n      new XSDElement.ElementDescriptor(qname, typeQName, form, isMany);\n\n    if (this.$nillable) {\n      descriptor.isNillable = true;\n    }\n\n    if (this.ref) {\n      // Ref to a global element\n      var refDescriptor = this.ref.describe(definitions);\n      if (refDescriptor) {\n        this.descriptor = descriptor = refDescriptor.clone(isMany);\n        if (this.$nillable) {\n          descriptor.isNillable = true;\n        }\n      }\n    } else if (this.type) {\n      if (this.type instanceof ComplexType) {\n        descriptor.isSimple = false;\n        var typeDescriptor = this.type.describe(definitions);\n        if (typeDescriptor) {\n          descriptor.elements = typeDescriptor.elements;\n          descriptor.attributes = typeDescriptor.attributes;\n          descriptor.mixed = typeDescriptor.mixed;\n          descriptor.extension = typeDescriptor.extension;\n          if(descriptor.extension && descriptor.extension.isSimple === true) {\n            descriptor.isSimple = true;\n          }\n          descriptor.typeDescriptor = typeDescriptor;\n        }\n      } else if (this.type instanceof SimpleType) {\n        descriptor.isSimple = true;\n        descriptor.jsType = this.type.jsType;\n      }\n    } else {\n      // anonymous complexType or simpleType\n      var children = this.children;\n      for (var i = 0, child; child = children[i]; i++) {\n        if (child instanceof ComplexType) {\n          descriptor.isSimple = false;\n          var childDescriptor = child.describe(definitions);\n          if (childDescriptor) {\n            descriptor.elements = childDescriptor.elements;\n            descriptor.attributes = childDescriptor.attributes;\n            descriptor.mixed = childDescriptor.mixed;\n          }\n          break;\n        } else if (child instanceof SimpleType) {\n          // name of the parent element is the anonymous type's name\n          child.$name = this.$name;\n          let typeQName = child.getQName();\n          // regenerate descriptor with new type qname\n          descriptor = this.descriptor =\n            new XSDElement.ElementDescriptor(qname, typeQName, form, isMany);\n          descriptor.isSimple = true;\n          if (child.type && child.type.jsType) {\n            descriptor.jsType = child.type.jsType;\n          } else if (child.jsType) {\n            descriptor.jsType = child.jsType;\n          }\n          descriptor.type = typeQName;\n          // embed anonymous type inside the descriptor\n          descriptor.type.anonymous = child;\n        }\n      }\n    }\n    return descriptor;\n  }\n\n  postProcess(defintions) {\n    var schemas = defintions.schemas;\n    if (this.$ref) {\n      this.ref = this.resolveSchemaObject(schemas, 'element', this.$ref);\n    } else if (this.$type) {\n      this.type = this.resolveSchemaObject(schemas, 'type', this.$type);\n    }\n    if (this.substitutionGroup) {\n      this.substitutionGroup = this.resolveSchemaObject(\n        schemas, 'element', this.$substitutionGroup);\n    }\n  }\n\n  getForm() {\n    var parent = this.parent;\n    if (parent instanceof Schema) {\n      // Global element\n      return 'qualified';\n    }\n    if (this.$form) {\n      return this.$form;\n    }\n    while (parent) {\n      if (parent instanceof Schema) {\n        return parent.$elementFormDefault || 'unqualified';\n      }\n      parent = parent.parent;\n    }\n    return 'unqualified';\n  }\n}\n\nElement.elementName = 'element';\nElement.allowedChildren = ['annotation', 'complexType', 'simpleType',\n  'unique', 'key', 'keyref'];\n\nmodule.exports = Element;\n"],"mappings":"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","ignoreList":[]}