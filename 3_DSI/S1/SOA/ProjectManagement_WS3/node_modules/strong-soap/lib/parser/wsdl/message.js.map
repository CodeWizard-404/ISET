{"version":3,"file":"message.js","names":["WSDLElement","require","descriptor","helper","assert","QName","Message","constructor","nsName","attrs","options","parts","addChild","child","name","$name","postProcess","definitions","p","describe","TypeDescriptor","part","partDescriptor","ElementDescriptor","type","elements","attributes","add","elementName","allowedChildren","module","exports"],"sources":["../../../src/parser/wsdl/message.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar WSDLElement = require('./wsdlElement');\nvar descriptor = require('../xsd/descriptor');\nvar helper = require('../helper');\nvar assert = require('assert');\nvar QName = require('../qname');\n\nclass Message extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n    this.parts = {};\n  }\n\n  addChild(child) {\n    if (child.name === 'part') {\n      this.parts[child.$name] = child;\n    }\n  }\n\n  postProcess(definitions) {\n    for (var p in this.parts) {\n      this.parts[p].postProcess(definitions);\n    }\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    this.descriptor = new descriptor.TypeDescriptor();\n    for (var part in this.parts) {\n      var p = this.parts[part];\n      var partDescriptor = p.describe(definitions);\n      if (partDescriptor instanceof descriptor.TypeDescriptor) {\n        var child = new descriptor.ElementDescriptor(new QName(p.$name),\n          partDescriptor.type, 'unqualified', false);\n        child.elements = partDescriptor.elements;\n        child.attributes = partDescriptor.attributes;\n        this.descriptor.add(child);\n      } else {\n        this.descriptor.add(partDescriptor);\n      }\n    }\n  }\n}\n\nMessage.elementName = 'message';\nMessage.allowedChildren = ['part', 'documentation'];\n\nmodule.exports = Message;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIC,UAAU,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC7C,IAAIE,MAAM,GAAGF,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAII,KAAK,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAE/B,MAAMK,OAAO,SAASN,WAAW,CAAC;EAChCO,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAClC,KAAK,CAACF,MAAM,EAAEC,KAAK,EAAEC,OAAO,CAAC;IAC7B,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACjB;EAEAC,QAAQA,CAACC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,IAAI,KAAK,MAAM,EAAE;MACzB,IAAI,CAACH,KAAK,CAACE,KAAK,CAACE,KAAK,CAAC,GAAGF,KAAK;IACjC;EACF;EAEAG,WAAWA,CAACC,WAAW,EAAE;IACvB,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACP,KAAK,EAAE;MACxB,IAAI,CAACA,KAAK,CAACO,CAAC,CAAC,CAACF,WAAW,CAACC,WAAW,CAAC;IACxC;EACF;EAEAE,QAAQA,CAACF,WAAW,EAAE;IACpB,IAAI,IAAI,CAACf,UAAU,EAAE,OAAO,IAAI,CAACA,UAAU;IAC3C,IAAI,CAACA,UAAU,GAAG,IAAIA,UAAU,CAACkB,cAAc,CAAC,CAAC;IACjD,KAAK,IAAIC,IAAI,IAAI,IAAI,CAACV,KAAK,EAAE;MAC3B,IAAIO,CAAC,GAAG,IAAI,CAACP,KAAK,CAACU,IAAI,CAAC;MACxB,IAAIC,cAAc,GAAGJ,CAAC,CAACC,QAAQ,CAACF,WAAW,CAAC;MAC5C,IAAIK,cAAc,YAAYpB,UAAU,CAACkB,cAAc,EAAE;QACvD,IAAIP,KAAK,GAAG,IAAIX,UAAU,CAACqB,iBAAiB,CAAC,IAAIlB,KAAK,CAACa,CAAC,CAACH,KAAK,CAAC,EAC7DO,cAAc,CAACE,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC;QAC5CX,KAAK,CAACY,QAAQ,GAAGH,cAAc,CAACG,QAAQ;QACxCZ,KAAK,CAACa,UAAU,GAAGJ,cAAc,CAACI,UAAU;QAC5C,IAAI,CAACxB,UAAU,CAACyB,GAAG,CAACd,KAAK,CAAC;MAC5B,CAAC,MAAM;QACL,IAAI,CAACX,UAAU,CAACyB,GAAG,CAACL,cAAc,CAAC;MACrC;IACF;EACF;AACF;AAEAhB,OAAO,CAACsB,WAAW,GAAG,SAAS;AAC/BtB,OAAO,CAACuB,eAAe,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;AAEnDC,MAAM,CAACC,OAAO,GAAGzB,OAAO","ignoreList":[]}