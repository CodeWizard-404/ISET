{"version":3,"file":"restriction.js","names":["XSDElement","require","Sequence","Choice","QName","g","Restriction","constructor","nsName","attrs","options","addChild","child","name","$value","push","parent","elementName","describe","definitions","descriptor","TypeDescriptor","base","add","describeChildren","postProcess","defintions","schemas","$base","resolveSchemaObject","_getFractionDigitCount","val","lastDotPos","lastIndexOf","length","_getTotalDigitCount","stripped","replace","trim","enforce","violations","jsType","Boolean","Date","Number","isNaN","minExclusive","undefined","minInclusive","maxExclusive","maxInclusive","fractionDigits","fractionDigitCount","toFixed","totalDigits","integerDigits","parseInt","toString","maxLength","minLength","whiteSpace","pattern","RegExp","test","enumeration","indexOf","Error","f","$name","JSON","stringify","allowedChildren","module","exports"],"sources":["../../../src/parser/xsd/restriction.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2019. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar Sequence = require('./sequence');\nvar Choice = require('./choice');\nvar QName = require('../qname');\nvar g = require('../../globalize');\n\nclass Restriction extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  addChild(child) {\n    /*\n     * simpleType: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *             totalDigits|fractionDigits|length|minLength|maxLength|\n     *             enumeration|whiteSpace|pattern\n     * simpleContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *                totalDigits|fractionDigits|length|minLength|maxLength|\n     *                enumeration|whiteSpace|pattern|\n     *                attribute|attributeGroup\n     * complexContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *                 totalDigits|fractionDigits|length|minLength|maxLength|\n     *                 enumeration|whiteSpace|pattern|\n     *                 group|all|choice|sequence|\n     *                 attribute|attributeGroup\n     */\n    switch (child.name) {\n      case 'minExclusive':\n      case 'minInclusive':\n      case 'maxExclusive':\n      case 'maxInclusive':\n      case 'totalDigits':\n      case 'fractionDigits':\n      case 'length':\n      case 'minLength':\n      case 'maxLength':\n      case 'whiteSpace':\n      case 'pattern':\n        this[child.name] = child.$value;\n        break;\n      case 'enumeration':\n        this[child.name] = this[child.name] || [];\n        this[child.name].push(child.$value);\n        break;\n    }\n    if (this.parent.elementName === 'simpleContent') {\n      //\n    } else if (this.parent.elementName === 'complexContent') {\n      //\n    }\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var descriptor = this.descriptor =\n      new XSDElement.TypeDescriptor();\n    if (this.base) {\n      descriptor.add(this.base.describe(definitions));\n    }\n    return this.describeChildren(definitions, descriptor);\n  }\n\n  postProcess(defintions) {\n    if(this.base) return;\n    var schemas = defintions.schemas;\n    if (this.$base) {\n      if (this.parent.name === 'simpleContent' ||\n        this.parent.name === 'simpleType') {\n        this.base = this.resolveSchemaObject(schemas, 'simpleType', this.$base);\n      } else if (this.parent.name === 'complexContent') {\n        this.base = this.resolveSchemaObject(schemas, 'complexType', this.$base);\n        //\n      }\n    }\n    if(this.base) {\n      this.base.postProcess(defintions);\n    }\n  }\n\n  _getFractionDigitCount(val) {\n    var lastDotPos = val.lastIndexOf('.');\n    if (lastDotPos !== -1) {\n      return val.length - 1 - lastDotPos;\n    }\n\n    return 0;\n  }\n\n  _getTotalDigitCount(val) {\n    var stripped = val.replace('-', '').replace('.', '').trim();\n    return stripped.length;\n  }\n\n  enforce(val) {\n    var violations = [];\n\n    if (this.base) {\n      if (this.base.jsType === Boolean) {\n        val = val === 'true' || val === true;\n      } else if (typeof this.base.jsType === 'function' && this.base.jsType !== Date && this.base.jsType !== Number) {\n        val = this.base.jsType(val);\n      }\n\n      if(this.base.jsType === Number) {\n        if(isNaN(val)){\n          violations.push('value is not a number (' + val + ')');\n        }\n      }\n    }\n\n    if (this.minExclusive !== undefined) {\n      if (val <= this.minExclusive) {\n        violations.push('value is less or equal than minExclusive (' + val + ' <= ' + this.minExclusive + ')');\n      }\n    }\n\n    if (this.minInclusive !== undefined) {\n      if (val < this.minInclusive) {\n        violations.push('value is less than minInclusive (' + val + ' < ' + this.minInclusive + ')');\n      }\n    }\n\n    if (this.maxExclusive !== undefined) {\n      if (val >= this.maxExclusive) {\n        violations.push('value is greater or equal than maxExclusive (' + val + ' >= ' + this.maxExclusive + ')');\n      }\n    }\n\n    if (this.maxInclusive !== undefined) {\n      if (val > this.maxInclusive) {\n        violations.push('value is greater than maxInclusive (' + val + ' > ' + this.maxInclusive + ')');\n      }\n    }\n\n    if (this.fractionDigits !== undefined) {\n      if (typeof val === 'string') {\n        var fractionDigitCount = this._getFractionDigitCount(val);\n        if (fractionDigitCount > this.fractionDigits) {\n          violations.push('value has more decimal places than allowed (' + fractionDigitCount + ' > ' + this.fractionDigits + ')');\n        }\n      } else if (typeof val === 'number') {\n        val = val.toFixed(this.fractionDigits);\n      }\n    }\n\n    if (this.totalDigits !== undefined) {\n      if (typeof val === 'string') {\n        var totalDigits = this._getTotalDigitCount(val);\n        if (totalDigits > this.totalDigits) {\n          violations.push('value has more digits than allowed (' + totalDigits + ' > ' + this.totalDigits + ')');\n        }\n      } else if (typeof val === 'number') {\n        var integerDigits = parseInt(val).toString().replace('-', '').length;\n        if (integerDigits > this.totalDigits) {\n          violations.push('value has more integer digits than allowed (' + integerDigits + ' > ' + this.totalDigits + ')');\n        } else {\n          val = val.toFixed(this.totalDigits - integerDigits);\n        }\n      }\n    }\n\n    if (this.length !== undefined) {\n      if (val.length !== parseInt(this.length)) {\n        violations.push('lengths don\\'t match (' + val.length + ' != ' + this.length + ')');\n      }\n    }\n\n    if (this.maxLength !== undefined) {\n      if (val.length > this.maxLength) {\n        violations.push('length is bigger than maxLength (' + val.length + ' > ' + this.maxLength + ')');\n      }\n    }\n\n    if (this.minLength !== undefined) {\n      if (val.length < this.minLength) {\n        violations.push('length is smaller than minLength (' + val.length + ' < ' + this.minLength + ')');\n      }\n    }\n\n    if (this.whiteSpace === 'replace') {\n      val = val.replace(/[\\n\\r\\t]/mg, ' ');\n    } else if (this.whiteSpace === 'collapse') {\n      val = val.replace(/[\\n\\r\\t]/mg, ' ').replace(/[ ]+/mg, ' ').trim();\n    }\n\n    if (this.pattern) {\n      if (!new RegExp(this.pattern).test(val)) {\n        violations.push('value doesn\\'t match the required pattern (' + val + ' !match ' + this.pattern + ')');\n      }\n    }\n\n    if (this.enumeration) {\n      if (this.enumeration.indexOf(val) === -1) {\n        violations.push('value is not in the list of valid values (' + val + ' is not in ' + this.enumeration + ')');\n      }\n    }\n\n    if (violations.length > 0) {\n      throw new Error(g.f('The field %s cannot have value %s due to the violations: %s', this.parent.$name, val, JSON.stringify(violations)));\n    }\n\n    return val;\n  }\n}\n\nRestriction.elementName = 'restriction';\nRestriction.allowedChildren = ['annotation', 'minExclusive', 'minInclusive',\n  'maxExclusive', 'maxInclusive', 'totalDigits', 'fractionDigits', 'length',\n  'minLength', 'maxLength', 'enumeration', 'whiteSpace', 'pattern',\n  'group', 'all', 'choice', 'sequence', 'attribute', 'attributeGroup'];\n\nmodule.exports = Restriction;\n"],"mappings":"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","ignoreList":[]}