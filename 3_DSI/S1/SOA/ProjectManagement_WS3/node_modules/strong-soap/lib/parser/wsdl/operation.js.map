{"version":3,"file":"operation.js","names":["g","require","WSDLElement","descriptor","ElementDescriptor","TypeDescriptor","QName","helper","SimpleType","assert","Style","documentLiteralWrapped","documentLiteral","rpcLiteral","rpcEncoded","documentEncoded","Operation","constructor","nsName","attrs","options","faults","soapVersion","addChild","child","name","input","output","push","soapAction","$soapAction","style","$style","soapActionRequired","$soapActionRequired","nsURI","postProcess","definitions","_processed","i","n","length","parent","getMode","err","describeHeaders","param","headers","forEach","header","part","element","addElement","describe","type","warn","$name","describeFaults","f","fault","message","children","mode","body","p","parts","wrapperElement","namespace","targetNamespace","inputParts","outputParts","qName","prefix","qname","elementDescriptor","elements","Error","inputHeaders","outputHeaders","Fault","inputEnvelope","createEnvelopeDescriptor","outputEnvelope","faultEnvelope","parameterDescriptor","isOutput","soapNsURI","envelopeDescriptor","add","headerDescriptor","bodyDescriptor","xsdStr","namespaces","xsd","form","faultDescriptor","detailDescriptor","code","subCode","reason","use","count","console","error","elementName","allowedChildren","module","exports"],"sources":["../../../src/parser/wsdl/operation.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar g = require('../../globalize');\nvar WSDLElement = require('./wsdlElement');\nvar descriptor = require('../xsd/descriptor');\nvar ElementDescriptor = descriptor.ElementDescriptor;\nvar TypeDescriptor = descriptor.TypeDescriptor;\nvar QName = require('../qname');\nvar helper = require('../helper');\nvar SimpleType = require('../xsd/simpleType');\n\nvar assert = require('assert');\n\nconst Style = {\n  documentLiteralWrapped: 'documentLiteralWrapped',\n  documentLiteral: 'documentLiteral',\n  rpcLiteral: 'rpcLiteral',\n  rpcEncoded: 'rpcEncoded',\n  documentEncoded: 'documentEncoded'\n};\n\nclass Operation extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n    //there can be multiple faults defined in the operation. They all will have same type name 'fault'\n    //what differentiates them from each other is, the element/s which will get added under fault <detail> during runtime.\n    this.faults = [];\n    this.soapVersion;\n  }\n\n  addChild(child) {\n    switch (child.name) {\n      case 'input':\n        this.input = child;\n        break;\n      case 'output':\n        this.output = child;\n        break;\n      case 'fault':\n        this.faults.push(child);\n        break;\n      case 'operation': // soap:operation\n        this.soapAction = child.$soapAction || '';\n        this.style = child.$style || '';\n        this.soapActionRequired = child.$soapActionRequired === 'true' || child.$soapActionRequired === '1' || false;\n        //figure out from the binding operation soap version 1.1 or 1.2\n        if (child.nsURI === 'http://schemas.xmlsoap.org/wsdl/soap/') {\n          this.soapVersion ='1.1';\n        } else if(child.nsURI === 'http://schemas.xmlsoap.org/wsdl/soap12/') {\n          this.soapVersion ='1.2';\n        } else {\n          this.soapVersion = '1.1';\n        }\n        break;\n    }\n  }\n\n  postProcess(definitions) {\n    try {\n      if (this._processed) return; // Already processed\n      if (this.input) this.input.postProcess(definitions);\n      if (this.output) this.output.postProcess(definitions);\n      for (let i = 0, n = this.faults.length; i < n; i++) {\n        this.faults[i].postProcess(definitions);\n      }\n      if (this.parent.name === 'binding') {\n        this.getMode();\n      }\n      this._processed = true;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static describeHeaders(param, definitions) {\n    if (param == null) return null;\n    var headers = new descriptor.TypeDescriptor();\n    if (!param.headers) return headers;\n    param.headers.forEach(function(header) {\n      var part = header.part;\n      if (part && part.element) {\n        headers.addElement(part.element.describe(definitions));\n      } else if (part && part.type) {\n        g.warn('{{WS-I}} violation: ' +\n          '{{http://ws-i.org/profiles/basicprofile-1.2-2010-11-09.html#BP2113}}' +\n          ' part %s', part.$name);\n      }\n    });\n    return headers;\n  }\n\n  describeFaults(definitions) {\n    var faults = {};\n    for (var f in this.faults) {\n      let fault = this.faults[f];\n      let part = fault.message && fault.message.children[0]; //find the part through Fault message. There is only one part in fault message\n      if (part && part.element) {\n        faults[f] = part.element.describe(definitions);\n      } else {\n        g.warn('{{WS-I}} violation: ' +\n          '{{http://ws-i.org/profiles/basicprofile-1.2-2010-11-09.html#BP2113}}' +\n          ' part %s', part.$name);\n      }\n    }\n    return faults;\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var input, output;\n    switch (this.mode) {\n      case Style.documentLiteralWrapped:\n        if (this.input && this.input.body) {\n          for (let p in this.input.body.parts) {\n            let wrapperElement = this.input.body.parts[p].element;\n            if (wrapperElement) {\n              input = wrapperElement.describe(definitions);\n            }\n            break;\n          }\n        }\n        if (this.output && this.output.body) {\n          for (let p in this.output.body.parts) {\n            let wrapperElement = this.output.body.parts[p].element;\n            if (wrapperElement) {\n              output = wrapperElement.describe(definitions);\n            }\n            break;\n          }\n        }\n        break;\n      case Style.documentLiteral:\n        input = new descriptor.TypeDescriptor();\n        output = new descriptor.TypeDescriptor();\n        if (this.input && this.input.body) {\n          for (let p in this.input.body.parts) {\n            let element = this.input.body.parts[p].element;\n            if (element) {\n              input.addElement(element.describe(definitions));\n            }\n          }\n        }\n        if (this.output && this.output.body) {\n          for (let p in this.output.body.parts) {\n            let element = this.output.body.parts[p].element;\n            if (element) {\n              output.addElement(element.describe(definitions));\n            }\n          }\n        }\n        break;\n      case Style.rpcLiteral:\n      case Style.rpcEncoded:\n        // The operation wrapper element\n        let nsURI = (this.input && this.input.body &&\n          this.input.body.namespace) || this.targetNamespace;\n        input = new descriptor.ElementDescriptor(\n          new QName(nsURI, this.$name), null, 'qualified', false);\n        output = new descriptor.ElementDescriptor(\n          new QName(nsURI, this.$name + 'Response'), null, 'qualified', false);\n        let inputParts = new descriptor.TypeDescriptor();\n        let outputParts = new descriptor.TypeDescriptor();\n        if (this.input && this.input.body) {\n          for (let p in this.input.body.parts) {\n            let part = this.input.body.parts[p];\n            let type;\n            if (part.type) {\n              if (part.type instanceof SimpleType) {\n                var qName = new QName(part.type.targetNamespace, part.type.$name, part.type.prefix);\n                type = qName;\n              } else {\n                type = part.type.qname;\n              }\n              let element = new descriptor.ElementDescriptor(\n                new QName(nsURI, p), type, 'unqualified', false);\n              inputParts.addElement(element);\n            } else if (part.element) {\n              var elementDescriptor = part.element.describe(definitions);\n              inputParts.addElement(elementDescriptor);\n            }\n          }\n        }\n        if (this.output && this.output.body) {\n          for (let p in this.output.body.parts) {\n            let part = this.output.body.parts[p];\n            let type;\n            if (part.type) {\n              if (part.type instanceof SimpleType) {\n                var qName = new QName(part.type.targetNamespace, part.type.$name, part.type.prefix);\n                type = qName;\n              } else {\n                type = part.type.qname;\n              }\n              let element = new descriptor.ElementDescriptor(\n                new QName(nsURI, p), type, 'unqualified', false);\n              outputParts.addElement(element);\n            } else if (part.element) {\n              let elementDescriptor = part.element.describe(definitions);\n              outputParts.addElement(elementDescriptor);\n            }\n          }\n        }\n        input.elements = inputParts.elements;\n        output.elements = outputParts.elements;\n        break;\n      case Style.documentEncoded:\n        throw new Error(g.f('{{WSDL}} style not supported: %s', Style.documentEncoded));\n    }\n\n    let faults = this.describeFaults(definitions);\n    let inputHeaders = Operation.describeHeaders(this.input, definitions);\n    let outputHeaders = Operation.describeHeaders(this.output, definitions);\n\n    this.descriptor = {\n      name: this.$name,\n      style: this.mode,\n      soapAction: this.soapAction,\n      soapVersion: this.soapVersion,\n      input: {\n        body: input,\n        headers: inputHeaders\n      },\n      output: {\n        body: output,\n        headers: outputHeaders\n      },\n      faults: {\n          body: {Fault : {faults}}\n      }\n    };\n    this.descriptor.inputEnvelope =\n      Operation.createEnvelopeDescriptor(this.descriptor.input, false, this.soapVersion);\n    this.descriptor.outputEnvelope =\n      Operation.createEnvelopeDescriptor(this.descriptor.output, true, this.soapVersion);\n    this.descriptor.faultEnvelope =\n      Operation.createEnvelopeDescriptor(this.descriptor.faults, true, this.soapVersion);\n\n    return this.descriptor;\n  }\n\n  static createEnvelopeDescriptor(parameterDescriptor, isOutput, soapVersion, prefix, nsURI) {\n    prefix = prefix || 'soap';\n    var soapNsURI;\n    if (soapVersion === '1.1') {\n      soapNsURI = 'http://schemas.xmlsoap.org/soap/envelope/';\n    } else if (soapVersion === '1.2') {\n      soapNsURI = 'http://www.w3.org/2003/05/soap-envelope';\n    }\n\n    nsURI = nsURI || soapNsURI;\n    var descriptor = new TypeDescriptor();\n\n    var envelopeDescriptor = new ElementDescriptor(\n      new QName(nsURI, 'Envelope', prefix), null, 'qualified', false);\n    descriptor.add(envelopeDescriptor);\n\n    var headerDescriptor = new ElementDescriptor(\n      new QName(nsURI, 'Header', prefix), null, 'qualified', false);\n\n    var bodyDescriptor = new ElementDescriptor(\n      new QName(nsURI, 'Body', prefix), null, 'qualified', false);\n\n    envelopeDescriptor.addElement(headerDescriptor);\n    envelopeDescriptor.addElement(bodyDescriptor);\n\n    //add only if input or output. Fault is list of faults unlike input/output element and fault needs further processing below,\n    //before it can be added to the <body>\n    if (parameterDescriptor && parameterDescriptor.body && !parameterDescriptor.body.Fault) {\n      bodyDescriptor.add(parameterDescriptor.body);\n    }\n\n    if (parameterDescriptor && parameterDescriptor.headers) {\n      bodyDescriptor.add(parameterDescriptor.headers);\n    }\n\n    //process faults. An example of resulting structure of the <Body> element with soap 1.1 <Fault> element descriptor:\n    /*\n     <soap:Body>\n       <soap:Fault>\n          <faultcode>sampleFaultCode</faultcode>\n          <faultstring>sampleFaultString</faultstring>\n          <detail>\n            <ns1:myMethodFault1 xmlns:ns1=\"http://example.com/doc_literal_wrapped_test.wsdl\">\n              <errorMessage1>MyMethod Business Exception message</errorMessage1>\n              <value1>10</value1>\n            </ns1:myMethodFault1>\n          </detail>\n        </soap:Fault>\n     </soap:Body>\n     */\n    if (isOutput && parameterDescriptor && parameterDescriptor.body.Fault) {\n      let xsdStr = new QName(helper.namespaces.xsd, 'string', 'xsd');\n      var form;\n      if (soapVersion === '1.1') {\n        form = 'unqualified';\n      } else if (soapVersion === '1.2') {\n        form = 'qualified';\n      }\n\n      let faultDescriptor = new ElementDescriptor(\n        new QName(nsURI, 'Fault', prefix), null, 'qualified', false);\n      bodyDescriptor.add(faultDescriptor);\n      let detailDescriptor;\n      if (soapVersion === '1.1') {\n        faultDescriptor.add(\n          new ElementDescriptor(new QName(nsURI, 'faultcode', prefix), null, form, false));\n        faultDescriptor.add(\n          new ElementDescriptor(new QName(nsURI, 'faultstring', prefix), null, form, false));\n        faultDescriptor.add(\n          new ElementDescriptor(new QName(nsURI, 'faultactor', prefix), null, form, false));\n        detailDescriptor =\n          new ElementDescriptor(new QName(nsURI, 'detail', prefix), null, form, false);\n        faultDescriptor.add(detailDescriptor);\n      } else if (soapVersion === '1.2') {\n        let code = new ElementDescriptor(new QName(nsURI, 'Code', prefix));\n        code.add(\n          new ElementDescriptor(new QName(nsURI, 'Value', prefix), null, form, false));\n        let subCode = new ElementDescriptor(new QName(nsURI, 'Subcode', prefix), null, form, false);\n        code.add (subCode);\n        subCode.add(\n          new ElementDescriptor(new QName(nsURI, 'Value', prefix), null, form, false));\n        faultDescriptor.add(code, null, form, false);\n        let reason = new ElementDescriptor(new QName(nsURI, 'Reason', prefix));\n        reason.add(\n          new ElementDescriptor(new QName(nsURI, 'Text', prefix), null, form, false));\n        faultDescriptor.add(reason, null, form, false);\n        faultDescriptor.add(\n          new ElementDescriptor(new QName(nsURI, 'Node', prefix), null, form, false));\n        faultDescriptor.add(\n          new ElementDescriptor(new QName(nsURI, 'Role', prefix), null, form, false));\n        detailDescriptor =\n          new ElementDescriptor(new QName(nsURI, 'Detail', prefix), null, form, false);\n        faultDescriptor.add(detailDescriptor);\n      }\n      //multiple faults may be defined in wsdl for this operation. Go though every Fault and add it under <detail> element.\n      for (var f in parameterDescriptor.body.Fault.faults) {\n        detailDescriptor.add(parameterDescriptor.body.Fault.faults[f]);\n      }\n    }\n\n    return descriptor;\n  }\n\n  getMode() {\n    let use = this.input && this.input.body && this.input.body.use || 'literal';\n    if (this.style === 'document' && use === 'literal') {\n      // document literal\n      let element = null;\n      let count = 0;\n      if (this.input && this.input.body) {\n        for (let p in this.input.body.parts) {\n          let part = this.input.body.parts[p];\n          element = part.element;\n          if (!(part.element && !part.type)) {\n            console.error('Document/literal part should use element', part);\n            throw new Error('Document/literal part should use element');\n          }\n          count++;\n        }\n      }\n      // Only one part and the input wrapper element has the same name as\n      // operation\n      if (count === 1 && element.$name === this.$name) {\n        count = 0;\n        if (this.output && this.output.body) {\n          for (let p in this.output.body.parts) {\n            let part = this.output.body.parts[p];\n            element = part.element;\n            assert(part.element && !part.type,\n              'Document/literal part should use element');\n            count++;\n          }\n        }\n        if (count === 1) {\n          this.mode = Style.documentLiteralWrapped;\n        } else {\n          this.mode = Style.documentLiteral;\n        }\n      } else {\n        this.mode = Style.documentLiteral;\n      }\n    } else if (this.style === 'document' && use === 'encoded') {\n      this.mode = Style.documentEncoded;\n    } else if (this.style === 'rpc' && use === 'encoded') {\n      this.mode = Style.rpcEncoded;\n    } else if (this.style === 'rpc' && use === 'literal') {\n      this.mode = Style.rpcLiteral;\n    }\n    return this.mode;\n  }\n\n}\n\nOperation.Style = Style;\nOperation.elementName = 'operation';\nOperation.allowedChildren = ['documentation', 'input', 'output', 'fault',\n  'operation'];\n\nmodule.exports = Operation;\n\n"],"mappings":"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","ignoreList":[]}