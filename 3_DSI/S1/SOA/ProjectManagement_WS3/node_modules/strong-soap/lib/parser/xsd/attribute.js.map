{"version":3,"file":"attribute.js","names":["XSDElement","require","Schema","QName","Attribute","constructor","nsName","attrs","options","getForm","parent","$form","$attributeFormDefault","describe","definitions","descriptor","ref","form","qname","getQName","isMany","type","typeQName","AttributeDescriptor","postProcess","defintions","schemas","$ref","resolveSchemaObject","$type","elementName","allowedChildren","module","exports"],"sources":["../../../src/parser/xsd/attribute.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar Schema = require('./schema');\nvar QName = require('../qname');\n\nclass Attribute extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  getForm() {\n    var parent = this.parent;\n    if (parent instanceof Schema) {\n      // Global attribute\n      return 'qualified';\n    }\n    if (this.$form) {\n      return this.$form;\n    }\n    while (parent) {\n      if (parent instanceof Schema) {\n        return parent.$attributeFormDefault || 'unqualified';\n      }\n      parent = parent.parent;\n    }\n    return 'unqualified';\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n\n    if (this.ref) {\n      // Ref to a global attribute\n      this.descriptor = this.ref.describe(definitions);\n      this.descriptor.form = 'qualified';\n    } else {\n      var form = this.getForm();\n      var qname = this.getQName();\n      var isMany = this.isMany();\n      var type = this.type;\n      var typeQName;\n      if (type instanceof QName) {\n        typeQName = type;\n      } else if (type instanceof XSDElement) {\n        typeQName = type.getQName();\n      }\n      this.descriptor =\n        new XSDElement.AttributeDescriptor(qname, typeQName, form, isMany);\n    }\n    return this.descriptor;\n\n  }\n\n  postProcess(defintions) {\n    var schemas = defintions.schemas;\n    if (this.$ref) {\n      this.ref = this.resolveSchemaObject(schemas, 'attribute', this.$ref);\n    } else if (this.$type) {\n      this.type = this.resolveSchemaObject(schemas, 'type', this.$type);\n    }\n  }\n}\n\nAttribute.elementName = 'attribute';\nAttribute.allowedChildren = ['annotation', 'simpleType'];\n\nmodule.exports = Attribute;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAU,CAAC;AAE/B,MAAMG,SAAS,SAASJ,UAAU,CAAC;EACjCK,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAClC,KAAK,CAACF,MAAM,EAAEC,KAAK,EAAEC,OAAO,CAAC;EAC/B;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIA,MAAM,YAAYR,MAAM,EAAE;MAC5B;MACA,OAAO,WAAW;IACpB;IACA,IAAI,IAAI,CAACS,KAAK,EAAE;MACd,OAAO,IAAI,CAACA,KAAK;IACnB;IACA,OAAOD,MAAM,EAAE;MACb,IAAIA,MAAM,YAAYR,MAAM,EAAE;QAC5B,OAAOQ,MAAM,CAACE,qBAAqB,IAAI,aAAa;MACtD;MACAF,MAAM,GAAGA,MAAM,CAACA,MAAM;IACxB;IACA,OAAO,aAAa;EACtB;EAEAG,QAAQA,CAACC,WAAW,EAAE;IACpB,IAAI,IAAI,CAACC,UAAU,EAAE,OAAO,IAAI,CAACA,UAAU;IAE3C,IAAI,IAAI,CAACC,GAAG,EAAE;MACZ;MACA,IAAI,CAACD,UAAU,GAAG,IAAI,CAACC,GAAG,CAACH,QAAQ,CAACC,WAAW,CAAC;MAChD,IAAI,CAACC,UAAU,CAACE,IAAI,GAAG,WAAW;IACpC,CAAC,MAAM;MACL,IAAIA,IAAI,GAAG,IAAI,CAACR,OAAO,CAAC,CAAC;MACzB,IAAIS,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;MAC3B,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAC1B,IAAIC,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAIC,SAAS;MACb,IAAID,IAAI,YAAYlB,KAAK,EAAE;QACzBmB,SAAS,GAAGD,IAAI;MAClB,CAAC,MAAM,IAAIA,IAAI,YAAYrB,UAAU,EAAE;QACrCsB,SAAS,GAAGD,IAAI,CAACF,QAAQ,CAAC,CAAC;MAC7B;MACA,IAAI,CAACJ,UAAU,GACb,IAAIf,UAAU,CAACuB,mBAAmB,CAACL,KAAK,EAAEI,SAAS,EAAEL,IAAI,EAAEG,MAAM,CAAC;IACtE;IACA,OAAO,IAAI,CAACL,UAAU;EAExB;EAEAS,WAAWA,CAACC,UAAU,EAAE;IACtB,IAAIC,OAAO,GAAGD,UAAU,CAACC,OAAO;IAChC,IAAI,IAAI,CAACC,IAAI,EAAE;MACb,IAAI,CAACX,GAAG,GAAG,IAAI,CAACY,mBAAmB,CAACF,OAAO,EAAE,WAAW,EAAE,IAAI,CAACC,IAAI,CAAC;IACtE,CAAC,MAAM,IAAI,IAAI,CAACE,KAAK,EAAE;MACrB,IAAI,CAACR,IAAI,GAAG,IAAI,CAACO,mBAAmB,CAACF,OAAO,EAAE,MAAM,EAAE,IAAI,CAACG,KAAK,CAAC;IACnE;EACF;AACF;AAEAzB,SAAS,CAAC0B,WAAW,GAAG,WAAW;AACnC1B,SAAS,CAAC2B,eAAe,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC;AAExDC,MAAM,CAACC,OAAO,GAAG7B,SAAS","ignoreList":[]}