{"version":3,"file":"descriptor.js","names":["assert","require","QName","AttributeDescriptor","constructor","qname","type","form","TypeDescriptor","elements","attributes","addElement","element","ElementDescriptor","push","addAttribute","attribute","add","item","isMany","clone","i","n","length","extension","findElement","name","findAttribute","find","isSimple","copy","isNillable","jsType","mixed","refOriginal","module","exports"],"sources":["../../../src/parser/xsd/descriptor.js"],"sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar assert = require('assert');\nvar QName = require('../qname');\n\n/**\n * Descriptor for an XML attribute\n */\nclass AttributeDescriptor {\n  constructor(qname, type, form) {\n    assert(qname == null || qname instanceof QName, 'Invalid qname: ' + qname);\n    this.qname = qname;\n    this.type = type;\n    form = form || 'qualified';\n    assert(form === 'qualified' || form === 'unqualified',\n      'Invalid form: ' + form);\n    this.form = form;\n  }\n}\n\n/**\n * Descriptor for an XML type\n */\nclass TypeDescriptor {\n  constructor(qname) {\n    this.elements = [];\n    this.attributes = [];\n  }\n\n  addElement(element) {\n    assert(element instanceof ElementDescriptor);\n    this.elements.push(element);\n    return element;\n  }\n\n  addAttribute(attribute) {\n    assert(attribute instanceof AttributeDescriptor);\n    this.attributes.push(attribute);\n    return attribute;\n  }\n\n  add(item, isMany) {\n    if (item instanceof ElementDescriptor) {\n      this.addElement(item.clone(isMany));\n    } else if (item instanceof AttributeDescriptor) {\n      this.addAttribute(item);\n    } else if (item instanceof TypeDescriptor) {\n      var i, n;\n      for (i = 0, n = item.elements.length; i < n; i++) {\n        this.addElement(item.elements[i]);\n      }\n      for (i = 0, n = item.attributes.length; i < n; i++) {\n        this.addAttribute(item.attributes[i]);\n      }\n      if (item.extension) {\n          this.extension = item.extension;\n      }\n    }\n  }\n\n  findElement(name) {\n    for (var i = 0, n = this.elements.length; i < n; i++) {\n      if (this.elements[i].qname.name === name) {\n        return this.elements[i];\n      }\n    }\n    return null;\n  }\n\n  findAttribute(name) {\n    for (var i = 0, n = this.attributes.length; i < n; i++) {\n      if (this.attributes[i].qname.name === name) {\n        return this.attributes[i];\n      }\n    }\n    return null;\n  }\n\n  find(name) {\n    var element = this.findElement(name);\n    if (element) return element;\n    var attribute = this.findAttribute(name);\n    return attribute;\n  }\n}\n\n/**\n * Descriptor for an XML element\n */\nclass ElementDescriptor extends TypeDescriptor {\n  constructor(qname, type, form, isMany) {\n    super();\n    assert(qname == null || qname instanceof QName, 'Invalid qname: ' + qname);\n    this.qname = qname;\n    this.type = type;\n    form = form || 'qualified';\n    assert(form === 'qualified' || form === 'unqualified',\n      'Invalid form: ' + form);\n    this.form = form;\n    this.isMany = !!isMany;\n    this.isSimple = false;\n  }\n\n  clone(isMany) {\n    // Check if the referencing element or this element has 'maxOccurs>1'\n    isMany = (!!isMany) || this.isMany;\n    var copy = new ElementDescriptor(this.qname, this.type, this.form, isMany);\n    copy.isNillable = this.isNillable;\n    copy.isSimple = this.isSimple;\n    if (this.jsType) copy.jsType = this.jsType;\n    if (this.elements != null) copy.elements = this.elements;\n    if (this.attributes != null) copy.attributes = this.attributes;\n    if (this.mixed != null) copy.mixed = this.mixed;\n    copy.refOriginal = this;\n    return copy;\n  }\n}\n\nmodule.exports = {\n  ElementDescriptor: ElementDescriptor,\n  AttributeDescriptor: AttributeDescriptor,\n  TypeDescriptor: TypeDescriptor\n};\n\n"],"mappings":"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","ignoreList":[]}